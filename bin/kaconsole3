#!/usr/bin/ruby -w

$kadeploy_libs=ENV['KADEPLOY3_LIBS']||'/usr/local/kadeploy3/src/lib'

$:.unshift($kadeploy_libs)

require 'optparse'
require 'yaml'
require 'client'

Signal.trap("INT") do
  $stdout.puts "\nSIGINT trapped"
  Kadeploy::KaconsoleClient.kill() rescue nil
  exit!(1)
end

module Kadeploy

class KaconsoleClient < Client
  def self.operation()
    'Node console'
  end

  def self.load_options()
    global_load_options().merge(
      {
        :node => nil,
      }
    )
  end

  def self.parse_options()
    global_parse_options() do |opt,options|
      opt.separator "General options:"
      parse_machine(opt,options)
    end
  end

  def self.check_options(options)
    if !options[:nodes] or options[:nodes].empty?
      error("You must choose one node")
      return false
    end

    if options[:nodes] and options[:nodes].size > 1
      error("You can only choose one node")
      return false
    end
    true
  end

  def run(options)
    params = init_params(options)

    get(File.join(api_path(),options[:nodes][0]),params)
  end

  def result(options,ret)
    # TODO: kill the console when the user loose the rights
    # @killed -> check rights on nodes
    @killed = false

    pid = fork { exec(ret['command']) }

    ret_wait = 0
    until @killed
      ret_wait = Process.waitpid(pid, Process::WNOHANG)
      @killed = true if ret_wait == pid
      sleep(1)
    end

    Process.kill("SIGKILL", pid) if ret_wait != pid
  end
end

end

if __FILE__ == $0
  Kadeploy::KaconsoleClient.launch()
end
